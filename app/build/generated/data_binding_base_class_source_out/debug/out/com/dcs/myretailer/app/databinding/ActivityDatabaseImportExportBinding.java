// Generated by data binding compiler. Do not edit!
package com.dcs.myretailer.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.dcs.myretailer.app.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityDatabaseImportExportBinding extends ViewDataBinding {
  @NonNull
  public final CardView cardviewId;

  @NonNull
  public final LinearLayout layOverAll;

  @NonNull
  public final TextView masterDbSize;

  @NonNull
  public final ListView masterList;

  @NonNull
  public final LinearLayout productLinearLayoutId;

  @NonNull
  public final TextView transactionDbSize;

  @NonNull
  public final ListView transactionList;

  @NonNull
  public final TextView transactionTxtHeader;

  @NonNull
  public final TextView txtMasHeader;

  protected ActivityDatabaseImportExportBinding(Object _bindingComponent, View _root,
      int _localFieldCount, CardView cardviewId, LinearLayout layOverAll, TextView masterDbSize,
      ListView masterList, LinearLayout productLinearLayoutId, TextView transactionDbSize,
      ListView transactionList, TextView transactionTxtHeader, TextView txtMasHeader) {
    super(_bindingComponent, _root, _localFieldCount);
    this.cardviewId = cardviewId;
    this.layOverAll = layOverAll;
    this.masterDbSize = masterDbSize;
    this.masterList = masterList;
    this.productLinearLayoutId = productLinearLayoutId;
    this.transactionDbSize = transactionDbSize;
    this.transactionList = transactionList;
    this.transactionTxtHeader = transactionTxtHeader;
    this.txtMasHeader = txtMasHeader;
  }

  @NonNull
  public static ActivityDatabaseImportExportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_database_import_export, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityDatabaseImportExportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityDatabaseImportExportBinding>inflateInternal(inflater, R.layout.activity_database_import_export, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityDatabaseImportExportBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_database_import_export, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityDatabaseImportExportBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityDatabaseImportExportBinding>inflateInternal(inflater, R.layout.activity_database_import_export, null, false, component);
  }

  public static ActivityDatabaseImportExportBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityDatabaseImportExportBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityDatabaseImportExportBinding)bind(component, view, R.layout.activity_database_import_export);
  }
}
