// Generated by data binding compiler. Do not edit!
package com.dcs.myretailer.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatCheckBox;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.dcs.myretailer.app.R;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class ActivityAddTaxConfigurationsBinding extends ViewDataBinding {
  @NonNull
  public final LinearLayout LayName;

  @NonNull
  public final LinearLayout LayRate;

  @NonNull
  public final LinearLayout Layservicecharges;

  @NonNull
  public final LinearLayout Laytaxtype;

  @NonNull
  public final Button btnAddTax;

  @NonNull
  public final Button btnDeleteTax;

  @NonNull
  public final AppCompatCheckBox chkPosService;

  @NonNull
  public final EditText editTaxType;

  @NonNull
  public final EditText editTextTaxActonym;

  @NonNull
  public final EditText editTextTaxName;

  @NonNull
  public final EditText editTextTaxRate;

  @NonNull
  public final ImageView imgTaxType;

  @NonNull
  public final LinearLayout layOverAll;

  protected ActivityAddTaxConfigurationsBinding(Object _bindingComponent, View _root,
      int _localFieldCount, LinearLayout LayName, LinearLayout LayRate,
      LinearLayout Layservicecharges, LinearLayout Laytaxtype, Button btnAddTax,
      Button btnDeleteTax, AppCompatCheckBox chkPosService, EditText editTaxType,
      EditText editTextTaxActonym, EditText editTextTaxName, EditText editTextTaxRate,
      ImageView imgTaxType, LinearLayout layOverAll) {
    super(_bindingComponent, _root, _localFieldCount);
    this.LayName = LayName;
    this.LayRate = LayRate;
    this.Layservicecharges = Layservicecharges;
    this.Laytaxtype = Laytaxtype;
    this.btnAddTax = btnAddTax;
    this.btnDeleteTax = btnDeleteTax;
    this.chkPosService = chkPosService;
    this.editTaxType = editTaxType;
    this.editTextTaxActonym = editTextTaxActonym;
    this.editTextTaxName = editTextTaxName;
    this.editTextTaxRate = editTextTaxRate;
    this.imgTaxType = imgTaxType;
    this.layOverAll = layOverAll;
  }

  @NonNull
  public static ActivityAddTaxConfigurationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_add_tax_configurations, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static ActivityAddTaxConfigurationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<ActivityAddTaxConfigurationsBinding>inflateInternal(inflater, R.layout.activity_add_tax_configurations, root, attachToRoot, component);
  }

  @NonNull
  public static ActivityAddTaxConfigurationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.activity_add_tax_configurations, null, false, component)
   */
  @NonNull
  @Deprecated
  public static ActivityAddTaxConfigurationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<ActivityAddTaxConfigurationsBinding>inflateInternal(inflater, R.layout.activity_add_tax_configurations, null, false, component);
  }

  public static ActivityAddTaxConfigurationsBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static ActivityAddTaxConfigurationsBinding bind(@NonNull View view,
      @Nullable Object component) {
    return (ActivityAddTaxConfigurationsBinding)bind(component, view, R.layout.activity_add_tax_configurations);
  }
}
